<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="InfluMe.Views.SignUpPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:controls="clr-namespace:InfluMe.Controls"
    xmlns:viewModel="clr-namespace:InfluMe.ViewModels" xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
    xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
    xmlns:ListCollection="clr-namespace:System.Collections.Generic;assembly=netstandard" xmlns:datePicker="http://schemas.syncfusion.com/xamarin" xmlns:converter="clr-namespace:InfluMe.Converters" xmlns:behaviors="clr-namespace:Xamarin.Forms.BehaviorsPack;assembly=Xamarin.Forms.BehaviorsPack"
    x:Name="signUpPage"
    Title="Join InfluMe"
    BackgroundColor="{DynamicResource Gray-Bg}"
    Shell.NavBarIsVisible="False"
    NavigationPage.HasNavigationBar="False">

    <!--  Binding context for Profile Page  -->
    <ContentPage.BindingContext>
        <viewModel:ProfilePageViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BooleanToColorConverter x:Key="ColorConverter" />
            <converter:InverseBoolConverter x:Key="InverseBoolConverter" />
            <converter:NameValidationConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ControlTemplate>
        <ControlTemplate>
            <StackLayout Spacing="0">
                <controls:TitleView Title="Become a Part of InfluMe">
                    <controls:TitleView.LeadingView>
                        <buttons:SfButton
                            x:Name="backButton"
                            Command="{Binding BindingContext.BackButtonCommand, Source={x:Reference signUpPage}}"
                            CommandParameter="{x:Reference backButton}"
                            Style="{StaticResource IconButtonStyle}"                            
                            Text="{StaticResource Back}" />
                    </controls:TitleView.LeadingView>
                </controls:TitleView>
                <ContentPresenter />
            </StackLayout>
        </ControlTemplate>
    </ContentPage.ControlTemplate>

    <ContentPage.Content>
        <ScrollView>

            <StackLayout Spacing="0">

                <datePicker:SfDatePicker x:Name="birthdatePicker"
                                         PickerMode="Dialog"
                                         PickerWidth="310"
                                         PickerHeight="360"
                                         ShowFooter="True"
                                         OKButtonBackgroundColor="{DynamicResource Gray-Bg}"
                                         OkButtonClicked="DatePicker_OkButtonClicked"
                                         CancelButtonBackgroundColor="{DynamicResource Gray-Bg}"
                                         ColumnHeaderBackgroundColor="{DynamicResource Gray-Bg}"
                                         ColumnHeaderTextColor="{DynamicResource Gray-900}"
                                         HeaderBackgroundColor="{DynamicResource PrimaryColor}"
                                         OKButtonTextColor="{DynamicResource PrimaryColor}"
                                         CancelButtonTextColor="{DynamicResource PrimaryColor}"
                                         BackgroundColor="{DynamicResource Gray-Bg}"
                                         SelectedItemFontFamily="Montserrat-Regular"
                                         SelectedItemFontSize="16"
                                         SelectedItemTextColor="{DynamicResource PrimaryColor}"
                                         UnselectedItemFontFamily="Montserrat-Regular"
                                         UnselectedItemFontSize="16"
                                         UnselectedItemTextColor="{DynamicResource Gray-900}"
                                         Format="dd_MM_yyyy" />

                <!--  Grid for email READONLY -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Grid.Column="0"                        
                        Text="Email" />

                    <Label
                        x:Name="InfluencerEmail"
                        Grid.Column="0"
                        Grid.Row="1"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        Style="{StaticResource TitleLabelStyle}"
                        Text="{Binding influencerEmail, Mode=TwoWay}"
                        VerticalOptions="Center" />

                </Grid>

                <!--  Grid for name  -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Text="Name"
                        Margin="0,-15"/>

                    <Entry
                        Grid.Column="0"
                        Grid.Row="0"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        WidthRequest="250"
                        VerticalOptions="Center"
                        Text="{Binding InfluencerName.Value}"/>
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding InfluencerName.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="{Binding InfluencerName.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />

                <!--  Grid for password  -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Grid.Column="0"
                        Text="Password" 
                        Margin="0,-15"/>

                    <Entry
                        Grid.Column="0"
                        Grid.Row="0"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        IsPassword="True"
                        WidthRequest="250"
                        VerticalOptions="Center"
                        Text="{Binding InfluencerPassword.Value}"/>
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding InfluencerPassword.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="{Binding InfluencerPassword.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />

                <!--  Grid for password confirmation -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Grid.Column="0"
                        Text="Password Confirmation" 
                        Margin="0,-15"/>

                    <Entry
                        Grid.Column="0"
                        Grid.Row="0"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        IsPassword="True"
                        WidthRequest="250"
                        VerticalOptions="Center"
                        Text="{Binding passwordConfirmation}">
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="Focused"
                                          Command="{Binding SetPasswordConfirmationErrorInvisible}" />
                        </Entry.Behaviors>
                    </Entry>
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding IsPasswordConfirmationErrorMessageVisible}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="Password Confirmation Mismatch"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />

                <!-- Grid for gender -->
                <Grid 
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Grid.Column="0"
                        Text="Gender" 
                        Margin="0,-15"/>
                    
                    <combobox:SfComboBox
                        x:Name="GenderPicker"
                        SelectedValue="{Binding InfluencerGender.Value, Mode=TwoWay}"
                        Style="{StaticResource TextInputLayoutComboBoxStyle}"
                        Watermark="Choose Gender"
                        FontFamily="Montserrat-Medium">
                        <combobox:SfComboBox.ComboBoxSource>
                            <ListCollection:List x:TypeArguments="x:String">
                                <x:String>Male</x:String>
                                <x:String>Female</x:String>
                            </ListCollection:List>
                        </combobox:SfComboBox.ComboBoxSource>
                    </combobox:SfComboBox>
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding InfluencerGender.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="{Binding InfluencerGender.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />

                <!-- Grid for Birthdate -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Grid.Column="0"
                        Text="Birthdate" 
                        Margin="0,-15"/>
                    <buttons:SfButton 
                        x:Name="birthdatePickerButton" 
                        Text="{Binding InfluencerDOB, StringFormat='{0:dd/MM/yyyy}', Mode=TwoWay}"
                        FontSize="16"
                        Padding="0,10"                                            
                        FontFamily="Montserrat-Regular"
                        HorizontalOptions="FillAndExpand"
                        HorizontalTextAlignment="Start"
                        TextColor="{DynamicResource Gray-900}"
                        BackgroundColor="Transparent" 
                        Clicked="DatePicker_Clicked">
                    </buttons:SfButton>
                </Grid>
                <Label
                    x:Name="birthdateErrorMessage"
                    Margin="15,-20,0,5"
                    IsVisible="{Binding IsBirthdateErrorMessageVisible}"
                    Style="{StaticResource SimpleLabelStyle}"
                    Text="Age Must Be At Least 13 Years Old"
                    TextColor="{DynamicResource Red}"
                    VerticalOptions="FillAndExpand" />

                <!--  Grid for address  -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Text="Address"
                        Margin="0,-15"/>

                    <Entry
                        Grid.Column="0"
                        Grid.Row="0"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        WidthRequest="250"
                        VerticalOptions="Center"
                        Text="{Binding InfluencerAddress.Value}"/>
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding InfluencerAddress.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="{Binding InfluencerAddress.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />
                
                <!--  Grid for Instagram  -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Text="Instagram Username"
                        Margin="0,-15"/>

                    <Entry
                        Grid.Column="0"
                        Grid.Row="0"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        WidthRequest="250"
                        Text="{Binding InfluencerInstagramId.Value}"
                        Keyboard="Text"
                        TextTransform="Lowercase"
                        VerticalOptions="Center" />
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding InfluencerInstagramId.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="{Binding InfluencerInstagramId.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />

                <!--  Grid for TikTok  -->
                <Grid
                    Padding="16"
                    ColumnDefinitions="Auto, *"
                    ColumnSpacing="16">

                    <Label
                        Text="TikTok Username"
                        Margin="0,-15"/>

                    <Entry
                        Grid.Column="0"
                        Grid.Row="0"
                        FontFamily="Montserrat-Medium"
                        HorizontalOptions="Start"
                        WidthRequest="250"
                        Text="{Binding InfluencerTiktokId.Value}"
                        Keyboard="Text"
                        TextTransform="Lowercase"
                        VerticalOptions="Center" />
                </Grid>
                <Label
                        Margin="15,-20,0,5"
                        IsVisible="{Binding InfluencerTiktokId.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource SimpleLabelStyle}"
                        Text="{Binding InfluencerTiktokId.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        TextColor="{DynamicResource Red}"
                        VerticalOptions="FillAndExpand" />

                <BoxView Style="{StaticResource HorizontalSeparatorStyle}" />
                <!--  Sign Up button  -->
                <buttons:SfButton 
                            Margin="16,16"
                            Command="{Binding SignUpCommand}"
                            HorizontalOptions="Fill"
                            Style="{StaticResource OrangeButtonStyle}"
                            Text="Sign Up" />


            </StackLayout>

        </ScrollView>

    </ContentPage.Content>
</ContentPage>